.wheel {
    border: 2px solid black;
    border-radius: 50%;
    margin-left: 50px;
    position: absolute;
    height: 55vw;
    width: 55vw;
    max-height: 500px;
    max-width: 500px;
    animation-name: wheel;
    /* The animation-name property is used to link a @keyframes rule to a CSS selector. 
The value of this property should match the name of the @keyframes rule. */
    animation-duration: 10s;
    /* The animation-duration property is used to set how long the animation should sequence to complete. 
    The time should be specified in either seconds (s) or milliseconds (ms) */
    animation-iteration-count: infinite;
    /* The animation-timing-function property sets how the animation should progress over time.  */
    animation-timing-function: linear;
    /* The animation-timing-function sets how the animation should progress over time. */
    /* linear sets the Ferris wheel animation to run at the same rate from start to finis */
}

.line {
    background-color: black;
    width: 50%;
    height: 2px;
    position: absolute;
    left: 50%;
    top: 50%;
    transform-origin: 0% 0%;
    /* This will offset the origin point by 0% from the left and 0% from the top,
     setting it to the top left corner of the element. */
    /* Used to set the point around which a CSS transformation is applied. */
}

.line:nth-of-type(2) {
    transform: rotate(60deg);
    /* will rotate the element around its transform-origin point by 60 degrees clockwise. */
}

.line:nth-of-type(3) {
    transform: rotate(120deg);
}

.line:nth-of-type(4) {
    transform: rotate(180deg);
}

.line:nth-of-type(5) {
    transform: rotate(240deg);
}

.line:nth-of-type(6) {
    transform: rotate(300deg);
}

.cabin {
    background-color: red;
    width: 20%;
    height: 20%;
    position: absolute;
    border: 2px solid;
    transform-origin: 50% 0%;
    /* This will set the origin point to be offset 50% from the left and 0% from the top,
     placing it in the middle of the top edge of the element. */
    animation: cabins 10s ease-in-out infinite;
    /* ease-in-out tells the animation to start and end at a slower pace, 
    but move more quickly in the middle of the cycle. */
}

.cabin:nth-of-type(1) {
    right: -8.5%;
    top: 50%
}

.cabin:nth-of-type(2) {
    right: 17%;
    top: 93.5%
}

.cabin:nth-of-type(3) {
    right: 67%;
    top: 93.5%
}

.cabin:nth-of-type(4) {
    left: -8.5%;
    top: 50%
}

.cabin:nth-of-type(5) {
    left: 17%;
    top: 7%
}

.cabin:nth-of-type(6) {
    right: 17%;
    top: 7%
}

@keyframes wheel {
    0% {
        transform: rotate(0deg);
        /* This will start the animation with no rotation. */
    }

    100% {
        transform: rotate(360deg);
        /* By doing this, your animation will now complete a full rotation. */
    }
}

/* The @keyframes at-rule is used to define the flow of a CSS animation. 
Within the @keyframes rule, you can create selectors for specific points in the animation sequence, 
such as 0% or 25%, or use from and to to define the start and end of the sequence. */

/* @keyframes rules require a name to be assigned to them, 
which you use in other rules to reference. 
For example, the @keyframes freeCodeCamp { } rule would be named freeCodeCamp */

@keyframes cabins {
    0% {
        transform: rotate(0deg);
        /* This will start the animation with no rotation. */
    }

    25% {
        background-color: yellow;
    }

    50% {
        background-color: purple;
    }

    75% {
        background-color: yellow;
    }

    100% {
        transform: rotate(-360deg);
        /* By doing this, your animation will now complete a full rotation. */
    }
}